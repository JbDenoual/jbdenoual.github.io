{"remainingRequest":"/Users/jbdenoual/Documents/Development/JbDenoual-Website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jbdenoual/Documents/Development/JbDenoual-Website/src/components/GlobalHome4.vue?vue&type=template&id=1f38fb4a","dependencies":[{"path":"/Users/jbdenoual/Documents/Development/JbDenoual-Website/src/components/GlobalHome4.vue","mtime":1743839832000},{"path":"/Users/jbdenoual/Documents/Development/JbDenoual-Website/node_modules/cache-loader/dist/cjs.js","mtime":1743848036955},{"path":"/Users/jbdenoual/Documents/Development/JbDenoual-Website/node_modules/cache-loader/dist/cjs.js","mtime":1743848036955},{"path":"/Users/jbdenoual/Documents/Development/JbDenoual-Website/node_modules/babel-loader/lib/index.js","mtime":1743848037186},{"path":"/Users/jbdenoual/Documents/Development/JbDenoual-Website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1743848037411},{"path":"/Users/jbdenoual/Documents/Development/JbDenoual-Website/node_modules/cache-loader/dist/cjs.js","mtime":1743848036955},{"path":"/Users/jbdenoual/Documents/Development/JbDenoual-Website/node_modules/vue-loader/lib/index.js","mtime":1743848037264}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}